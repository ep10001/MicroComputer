        .CPU        300HA                       ;CPUの種類を指示
        
        .SECTION    SET1,CODE,LOCATE=H'000000   ;セクションを宣言 セクション名=SET1,種類=CODE、先頭アドレス=0番地
P1DR:   .EQU        H'FFFFC2                    ;ポート1のDRアドレス設定
P1DDR:  .EQU        H'FFFFC0                    ;ポート1のDDRアドレス設定

        .SECTION    SET2,CODE,LOCATE=H'000100   ;セクションを宣言　セクション名=SET2,属性=CODE,先頭アドレス=100番地
        mov.L       #H'FFFF00,ER7               ;スタックポインタ設定
        mov.B       #H'FF,R0L                   ;出力用設定データ
        mov.B       R0L,@P1DDR                  ;ポート1を出力に設定
        
Kadai2: mov.B       @DATA1,R0L                  ;(DATA1)->R0L
        mov.B       @DATA2,R1L                  ;(DATA2)->R1L
        jsr         @Ad
        mov.W       R0,@DATA3                   ;R0L->H'FEF10

LED:    mov.B       R0H,@P1DR                   ;ポート1へ点灯データ(R0HまたはR0L)出力
LOOP:   jmp         @LOOP                       ;ループ

Ad:     extu.W      R0                          ;R0LをR0内に16bit拡張
        extu.W      R1                          ;R1LをR1内に16bit拡張
        add.W       R1,R0                       ;R0+R1->R0（LED点灯データ）
        rts

        .SECTION    DT,DATA,LOCATE=H'001000     ;セクションを宣言 セクション名=DT,属性=DATA,先頭アドレス=1000番地
DATA1:  .DATA.B     H'FF                        ;DATA1はH'001000番地
DATA2:  .DATA.B     H'FF                        ;DATA2はH'001001番地

        .SECTION    W,DATA,LOCATE=H'FEF10       ;セクションを宣言 RAM領域
DATA3:  .RES.W      1                           ;リザーブ命令 RAMに1番地分確保
        .END
        
;;; R0LはLED9←11111110→LED2
;;; R0HはLED9←00000001→LED2